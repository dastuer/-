// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "03/25/2021 15:46:08"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module data_sel (
	datain,
	dataout);
input 	[1:0] datain;
output 	[3:0] dataout;

// Design Ports Information
// dataout[0]	=>  Location: PIN_AD5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dataout[1]	=>  Location: PIN_AB6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dataout[2]	=>  Location: PIN_AC5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// dataout[3]	=>  Location: PIN_AB5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// datain[0]	=>  Location: PIN_AD4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// datain[1]	=>  Location: PIN_AF4,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("data_sel_7_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \dataout[0]~output_o ;
wire \dataout[1]~output_o ;
wire \dataout[2]~output_o ;
wire \dataout[3]~output_o ;
wire \datain[1]~input_o ;
wire \datain[0]~input_o ;
wire \Decoder0~0_combout ;
wire \Decoder0~1_combout ;
wire \Decoder0~2_combout ;
wire \Decoder0~3_combout ;


// Location: IOOBUF_X1_Y0_N23
cycloneive_io_obuf \dataout[0]~output (
	.i(!\Decoder0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataout[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataout[0]~output .bus_hold = "false";
defparam \dataout[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N9
cycloneive_io_obuf \dataout[1]~output (
	.i(\Decoder0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataout[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataout[1]~output .bus_hold = "false";
defparam \dataout[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N16
cycloneive_io_obuf \dataout[2]~output (
	.i(\Decoder0~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataout[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataout[2]~output .bus_hold = "false";
defparam \dataout[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N23
cycloneive_io_obuf \dataout[3]~output (
	.i(\Decoder0~3_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataout[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataout[3]~output .bus_hold = "false";
defparam \dataout[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N1
cycloneive_io_ibuf \datain[1]~input (
	.i(datain[1]),
	.ibar(gnd),
	.o(\datain[1]~input_o ));
// synopsys translate_off
defparam \datain[1]~input .bus_hold = "false";
defparam \datain[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N8
cycloneive_io_ibuf \datain[0]~input (
	.i(datain[0]),
	.ibar(gnd),
	.o(\datain[0]~input_o ));
// synopsys translate_off
defparam \datain[0]~input .bus_hold = "false";
defparam \datain[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N24
cycloneive_lcell_comb \Decoder0~0 (
// Equation(s):
// \Decoder0~0_combout  = (\datain[1]~input_o ) # (\datain[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\datain[1]~input_o ),
	.datad(\datain[0]~input_o ),
	.cin(gnd),
	.combout(\Decoder0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~0 .lut_mask = 16'hFFF0;
defparam \Decoder0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N10
cycloneive_lcell_comb \Decoder0~1 (
// Equation(s):
// \Decoder0~1_combout  = (!\datain[1]~input_o  & \datain[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\datain[1]~input_o ),
	.datad(\datain[0]~input_o ),
	.cin(gnd),
	.combout(\Decoder0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~1 .lut_mask = 16'h0F00;
defparam \Decoder0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N12
cycloneive_lcell_comb \Decoder0~2 (
// Equation(s):
// \Decoder0~2_combout  = (\datain[1]~input_o  & !\datain[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\datain[1]~input_o ),
	.datad(\datain[0]~input_o ),
	.cin(gnd),
	.combout(\Decoder0~2_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~2 .lut_mask = 16'h00F0;
defparam \Decoder0~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N30
cycloneive_lcell_comb \Decoder0~3 (
// Equation(s):
// \Decoder0~3_combout  = (\datain[1]~input_o  & \datain[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\datain[1]~input_o ),
	.datad(\datain[0]~input_o ),
	.cin(gnd),
	.combout(\Decoder0~3_combout ),
	.cout());
// synopsys translate_off
defparam \Decoder0~3 .lut_mask = 16'hF000;
defparam \Decoder0~3 .sum_lutc_input = "datac";
// synopsys translate_on

assign dataout[0] = \dataout[0]~output_o ;

assign dataout[1] = \dataout[1]~output_o ;

assign dataout[2] = \dataout[2]~output_o ;

assign dataout[3] = \dataout[3]~output_o ;

endmodule
